// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int @id @default(autoincrement())
  email   String @unique
  name    String?
  password String
  role      Role    @relation(fields: [roleId], references: [id])
  roleId    Int @default(0)
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  users User[]
}

model Seller {
  id        Int     @id @default(autoincrement())
  name      String
  email     String   @unique
  deals     Deal[]
  buyerSellers BuyerSeller[]
}

model Buyer {
  id        Int   @id @default(autoincrement())
  name      String
  email     String   @unique
  buyerSellers BuyerSeller[]
}

model BuyerSeller {
  id       Int    @id @default(autoincrement())
  buyer    Buyer  @relation(fields: [buyerId], references: [id])
  buyerId  Int
  seller   Seller @relation(fields: [sellerId], references: [id])
  sellerId Int

  @@unique([buyerId, sellerId])
}

model Item {
  id        Int      @id @default(autoincrement())
  name      String
  price     Decimal
  deal      Deal     @relation(fields: [dealId], references: [id])
  dealId    Int
  createAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Deal {
  id    Int @id @default(autoincrement())
  name  String
  seller   Seller   @relation(fields: [sellerId], references: [id])
  sellerId  Int
  currency  String
  totalPrice Decimal
  status String  
  discountType String?
  discountAmount Decimal?
  items    Item[]
  createAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}